{"version":3,"file":"static/js/698.f2277e50.chunk.js","mappings":"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","sources":["api/themoviedb.js","webpack://cine-search/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","../node_modules/clsx/dist/clsx.mjs","webpack://cine-search/./src/components/MovieForm/MovieForm.module.css?1b50","components/MovieForm/MovieForm.jsx","pages/Movies/Movies.jsx","webpack://cine-search/./src/tools/Error/Error.module.css?76ce","tools/Error/Error.jsx"],"sourcesContent":["const apiUrl = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nconst makeRequest = async (endpoint, queryParams = '') => {\n  const url = `${apiUrl}/${endpoint}?language=${language}${queryParams}`;\n\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkM2MyOWFkNTExODRjNjM2MGFkYzcxMzA3MDUyMjM4NSIsInN1YiI6IjY1YmJkMmViY2ZmZWVkMDE3Y2FlMTQ3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.n-OX6DpRYfuwkRBZXcYeYAck1tr7n62CL7QVfWGfE9I',\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n\n  return response.json();\n};\n\nconst getTrendingFilms = async () => {\n  return await makeRequest('trending/movie/day');\n};\n\nconst getMovieDetails = async movieId => {\n  return await makeRequest(`movie/${movieId}`);\n};\n\nconst getMovieCast = async movieId => {\n  return await makeRequest(`movie/${movieId}/credits`);\n};\n\nconst getMovieReviews = async movieId => {\n  return await makeRequest(`movie/${movieId}/reviews?page=1`);\n};\n\nconst getMovies = async query => {\n  const queryParams = `&query=${query}&include_adult=false&page=1`;\n  return await makeRequest('search/movie', queryParams);\n};\n\nexport {\n  getTrendingFilms,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getMovies,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"card\":\"MoviesList_card__55dah\",\"movieLink\":\"MoviesList_movieLink__QlD4H\",\"title\":\"MoviesList_title__PB2c8\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport default function MoviesList({ moviesArr = [], endPoint = '', state }) {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      {moviesArr[0] && (\n        <ul className={css.movieList}>\n          {moviesArr.map(({ id, title, poster_path }) => (\n            <li className={css.card} key={id}>\n              <Link\n                className={css.movieLink}\n                to={`${endPoint}${id}`}\n                state={state}\n              >\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : defaultImg\n                  }\n                  width={150}\n                  alt={title}\n                ></img>\n                <p className={css.title}>{title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// extracted by mini-css-extract-plugin\nexport default {\"movieForm\":\"MovieForm_movieForm__D+6k8\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './MovieForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useEffect, useRef } from 'react';\n\nexport default function MovieForm({ onSubmit }) {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.value = query;\n  });\n\n  const formSubmit = e => {\n    e.preventDefault();\n    const { value } = e.currentTarget.movie;\n    const validatedValue = value.trim();\n    if (validatedValue === '') return toast.warn('Please fill empty field');\n    onSubmit(validatedValue);\n  };\n\n  return (\n    <form className={css.movieForm} onSubmit={formSubmit}>\n      <input type=\"text\" name=\"movie\" ref={inputRef}></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MovieForm from 'components/MovieForm';\nimport MoviesList from 'components/MoviesList';\nimport { getMovies } from 'api/themoviedb';\n\nimport Loader from 'tools/Loader/Loader';\nimport Error from 'tools/Error/Error';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    setLoading(true);\n    getMovies(query)\n      .then(({ results }) => {\n        if (!results[0]) toast.info(`There are no films on query \"${query}\"`);\n        setFoundMovies([...results]);\n      })\n      .catch(err => {\n        console.error(err);\n        setIsError(true);\n      })\n      .finally(() => setLoading(false));\n  }, [query]);\n\n  const onSubmit = key => {\n    setSearchParams({ query: key });\n  };\n\n  return (\n    <>\n      <MovieForm onSubmit={onSubmit} />\n      {isError && <Error />}\n      {loading && <Loader />}\n      {!isError && !loading && foundMovies[0] && (\n        <MoviesList moviesArr={foundMovies} state={{ from: location }} />\n      )}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Error_container__QAix9\"};","import { PiMaskSad } from 'react-icons/pi';\nimport css from './Error.module.css';\n\nexport default function Error() {\n  return (\n    <div className={css.container}>\n      <PiMaskSad size={100} />\n      <h1>Sorry, something get wrong</h1>\n    </div>\n  );\n}\n"],"names":["makeRequest","async","endpoint","queryParams","arguments","length","undefined","url","concat","response","fetch","method","headers","accept","Authorization","ok","Error","status","json","getTrendingFilms","getMovieDetails","movieId","getMovieCast","getMovieReviews","getMovies","query","MoviesList","_ref","moviesArr","endPoint","state","_jsx","_Fragment","children","className","css","movieList","map","_ref2","id","title","poster_path","card","_jsxs","Link","movieLink","to","src","width","alt","r","e","t","f","n","Array","isArray","o","MovieForm","onSubmit","searchParams","useSearchParams","get","inputRef","useRef","useEffect","current","value","movieForm","preventDefault","currentTarget","movie","validatedValue","trim","toast","warn","type","name","ref","Movies","setSearchParams","foundMovies","setFoundMovies","useState","isError","setIsError","loading","setLoading","location","useLocation","then","results","info","catch","err","console","error","finally","key","Loader","from","ToastContainer","autoClose","container","PiMaskSad","size"],"sourceRoot":""}