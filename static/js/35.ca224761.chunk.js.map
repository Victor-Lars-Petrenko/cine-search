{"version":3,"file":"static/js/35.ca224761.chunk.js","mappings":"6JAAA,MAGMA,EAAcC,eAAOC,GAAgC,IAAtBC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACjD,MAAMG,EAAG,GAAAC,OAJI,+BAIQ,KAAAA,OAAIN,EAAQ,cAAAM,OAHlB,SAGuCA,OAAGL,GAEnDM,QAAiBC,MAAMH,EAAK,CAChCI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIN,IAAKL,EAASM,GACZ,MAAM,IAAIC,MAAMP,EAASQ,QAG3B,OAAOR,EAASS,MAClB,EAEMC,EAAmBlB,eACVD,EAAY,sBAGrBoB,EAAkBnB,eACTD,EAAY,SAADQ,OAAUa,IAG9BC,EAAerB,eACND,EAAY,SAADQ,OAAUa,EAAO,aAGrCE,EAAkBtB,eACTD,EAAY,SAADQ,OAAUa,EAAO,oBAGrCG,EAAYvB,UAChB,MAAME,EAAW,UAAAK,OAAaiB,EAAK,+BACnC,aAAazB,EAAY,eAAgBG,EAAY,C,2ECvCvD,SAAgB,SAAW,uBAAuB,KAAO,mBAAmB,KAAO,oB,+BCQpE,SAASuB,IACtB,MAAM,QAAEL,IAAYM,EAAAA,EAAAA,MACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEvCK,EAAAA,EAAAA,YAAU,KACHd,IACLC,EAAAA,EAAAA,IAAaD,GACVe,MAAKC,IAAA,IAAC,KAAET,GAAMS,EAAA,OAAKR,EAAQ,IAAID,GAAM,IACrCU,OAAMC,IACLC,QAAQC,MAAMF,GACdP,GAAW,EAAK,IAEjBU,SAAQ,IAAMR,GAAW,IAAO,GAClC,CAACb,IAKJ,OACEsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGd,IAAWe,EAAAA,EAAAA,KAAC9B,EAAAA,EAAK,IACjBiB,IAAWa,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACjBhB,IAAYE,IACZa,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACGjB,EAAK,IACJkB,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAIC,SAASL,SACzBjB,EAAKuB,KAAIC,IAA4C,IAA3C,GAAEC,EAAE,KAAEC,EAAI,UAAEC,EAAS,aAAEC,GAAcJ,EAC9C,OACET,EAAAA,EAAAA,MAAA,MAAaK,UAAWC,EAAIQ,KAAKZ,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OACEY,IACEF,EAAY,mCAAAhD,OAC2BgD,GAhB3D,8EAmBkBG,MAAO,IACPC,IAAKN,KAEPR,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAIK,KAAKT,SAAES,KACzBR,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAIK,KAAKT,SAAC,QACxBC,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAIK,KAAKT,SAAEU,MAZlBF,EAaJ,OAKXP,EAAAA,EAAAA,KAAA,KAAGe,MAAO,CAAEC,YAAa,IAAKjB,SAAC,4CAQ3C,C,4CChEA,SAAgB,UAAY,0B,aCEb,SAAS7B,IACtB,OACE2B,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAIc,UAAUlB,SAAA,EAC5BC,EAAAA,EAAAA,KAACkB,EAAAA,IAAS,CAACC,KAAM,OACjBnB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCAGV,C","sources":["api/themoviedb.js","webpack://cine-search/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://cine-search/./src/tools/Error/Error.module.css?76ce","tools/Error/Error.jsx"],"sourcesContent":["const apiUrl = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nconst makeRequest = async (endpoint, queryParams = '') => {\n  const url = `${apiUrl}/${endpoint}?language=${language}${queryParams}`;\n\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkM2MyOWFkNTExODRjNjM2MGFkYzcxMzA3MDUyMjM4NSIsInN1YiI6IjY1YmJkMmViY2ZmZWVkMDE3Y2FlMTQ3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.n-OX6DpRYfuwkRBZXcYeYAck1tr7n62CL7QVfWGfE9I',\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n\n  return response.json();\n};\n\nconst getTrendingFilms = async () => {\n  return await makeRequest('trending/movie/day');\n};\n\nconst getMovieDetails = async movieId => {\n  return await makeRequest(`movie/${movieId}`);\n};\n\nconst getMovieCast = async movieId => {\n  return await makeRequest(`movie/${movieId}/credits`);\n};\n\nconst getMovieReviews = async movieId => {\n  return await makeRequest(`movie/${movieId}/reviews?page=1`);\n};\n\nconst getMovies = async query => {\n  const queryParams = `&query=${query}&include_adult=false&page=1`;\n  return await makeRequest('search/movie', queryParams);\n};\n\nexport {\n  getTrendingFilms,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getMovies,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"card\":\"Cast_card__WlXfx\",\"name\":\"Cast_name__6UbFm\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'api/themoviedb';\nimport css from './Cast.module.css';\n\nimport Loader from 'tools/Loader/Loader';\nimport Error from 'tools/Error/Error';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieCast(movieId)\n      .then(({ cast }) => setCast([...cast]))\n      .catch(err => {\n        console.error(err);\n        setIsError(true);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <>\n      {isError && <Error />}\n      {loading && <Loader />}\n      {!isError && !loading && (\n        <>\n          {cast[0] ? (\n            <ul className={css.castList}>\n              {cast.map(({ id, name, character, profile_path }) => {\n                return (\n                  <li key={id} className={css.card}>\n                    <img\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                          : defaultImg\n                      }\n                      width={150}\n                      alt={name}\n                    ></img>\n                    <p className={css.name}>{name}</p>\n                    <p className={css.name}>as</p>\n                    <p className={css.name}>{character}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p style={{ paddingLeft: 20 }}>\n              There are no information about cast\n            </p>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Error_container__QAix9\"};","import { PiMaskSad } from 'react-icons/pi';\nimport css from './Error.module.css';\n\nexport default function Error() {\n  return (\n    <div className={css.container}>\n      <PiMaskSad size={100} />\n      <h1>Sorry, something get wrong</h1>\n    </div>\n  );\n}\n"],"names":["makeRequest","async","endpoint","queryParams","arguments","length","undefined","url","concat","response","fetch","method","headers","accept","Authorization","ok","Error","status","json","getTrendingFilms","getMovieDetails","movieId","getMovieCast","getMovieReviews","getMovies","query","Cast","useParams","cast","setCast","useState","isError","setIsError","loading","setLoading","useEffect","then","_ref","catch","err","console","error","finally","_jsxs","_Fragment","children","_jsx","Loader","className","css","castList","map","_ref2","id","name","character","profile_path","card","src","width","alt","style","paddingLeft","container","PiMaskSad","size"],"sourceRoot":""}