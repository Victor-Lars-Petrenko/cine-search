{"version":3,"file":"static/js/281.3db63d88.chunk.js","mappings":"8JAAA,MAGMA,EAAcC,eAAOC,GAAgC,IAAtBC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACjD,MAAMG,EAAG,GAAAC,OAJI,+BAIQ,KAAAA,OAAIN,EAAQ,cAAAM,OAHlB,SAGuCA,OAAGL,GAEnDM,QAAiBC,MAAMH,EAAK,CAChCI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIN,IAAKL,EAASM,GACZ,MAAM,IAAIC,MAAMP,EAASQ,QAG3B,OAAOR,EAASS,MAClB,EAEMC,EAAmBlB,eACVD,EAAY,sBAGrBoB,EAAkBnB,eACTD,EAAY,SAADQ,OAAUa,IAG9BC,EAAerB,eACND,EAAY,SAADQ,OAAUa,EAAO,aAGrCE,EAAkBtB,eACTD,EAAY,SAADQ,OAAUa,EAAO,oBAGrCG,EAAYvB,UAChB,MAAME,EAAW,UAAAK,OAAaiB,EAAK,+BACnC,aAAazB,EAAY,eAAgBG,EAAY,C,4ECvCvD,SAAgB,YAAc,8B,+BCQf,SAASuB,IACtB,MAAM,QAAEL,IAAYM,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAavC,OAXAK,EAAAA,EAAAA,YAAU,KACHd,IACLE,EAAAA,EAAAA,IAAgBF,GACbe,MAAKC,IAAA,IAAC,QAAEC,GAASD,EAAA,OAAKR,EAAW,IAAIS,GAAS,IAC9CC,OAAMC,IACLN,GAAW,GACXO,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,IAAMX,GAAW,IAAO,GAClC,CAACX,KAGFuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGb,IAAWc,EAAAA,EAAAA,KAAC/B,EAAAA,EAAK,IACjBe,IAAWgB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACjBf,GAAYF,IAAWH,EAAQ,IAY/BmB,EAAAA,EAAAA,KAAA,KAAGE,MAAO,CAAEC,YAAa,IAAKJ,SAAC,yCAX/BC,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAIC,YAAYP,SAC5BlB,EAAQ0B,KAAIC,IAA8B,IAA7B,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EACnC,OACEX,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKW,KACLV,EAAAA,EAAAA,KAAA,KAAAD,SAAIY,MAFGF,EAGJ,QASnB,C,4CC7CA,SAAgB,UAAY,0B,aCEb,SAASxC,IACtB,OACE4B,EAAAA,EAAAA,MAAA,OAAKO,UAAWC,EAAIO,UAAUb,SAAA,EAC5BC,EAAAA,EAAAA,KAACa,EAAAA,IAAS,CAACC,KAAM,OACjBd,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCAGV,C","sources":["api/themoviedb.js","webpack://cine-search/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","webpack://cine-search/./src/tools/Error/Error.module.css?76ce","tools/Error/Error.jsx"],"sourcesContent":["const apiUrl = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nconst makeRequest = async (endpoint, queryParams = '') => {\n  const url = `${apiUrl}/${endpoint}?language=${language}${queryParams}`;\n\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkM2MyOWFkNTExODRjNjM2MGFkYzcxMzA3MDUyMjM4NSIsInN1YiI6IjY1YmJkMmViY2ZmZWVkMDE3Y2FlMTQ3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.n-OX6DpRYfuwkRBZXcYeYAck1tr7n62CL7QVfWGfE9I',\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n\n  return response.json();\n};\n\nconst getTrendingFilms = async () => {\n  return await makeRequest('trending/movie/day');\n};\n\nconst getMovieDetails = async movieId => {\n  return await makeRequest(`movie/${movieId}`);\n};\n\nconst getMovieCast = async movieId => {\n  return await makeRequest(`movie/${movieId}/credits`);\n};\n\nconst getMovieReviews = async movieId => {\n  return await makeRequest(`movie/${movieId}/reviews?page=1`);\n};\n\nconst getMovies = async query => {\n  const queryParams = `&query=${query}&include_adult=false&page=1`;\n  return await makeRequest('search/movie', queryParams);\n};\n\nexport {\n  getTrendingFilms,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getMovies,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'api/themoviedb';\nimport css from './Reviews.module.css';\n\nimport Loader from 'tools/Loader/Loader';\nimport Error from 'tools/Error/Error';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieReviews(movieId)\n      .then(({ results }) => setReviews([...results]))\n      .catch(error => {\n        setIsError(true);\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isError && <Error />}\n      {loading && <Loader />}\n      {!isError && !loading && reviews[0] ? (\n        <ul className={css.reviewsList}>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h4>{author}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p style={{ paddingLeft: 20 }}>There are no reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Error_container__QAix9\"};","import { PiMaskSad } from 'react-icons/pi';\nimport css from './Error.module.css';\n\nexport default function Error() {\n  return (\n    <div className={css.container}>\n      <PiMaskSad size={100} />\n      <h1>Sorry, something get wrong</h1>\n    </div>\n  );\n}\n"],"names":["makeRequest","async","endpoint","queryParams","arguments","length","undefined","url","concat","response","fetch","method","headers","accept","Authorization","ok","Error","status","json","getTrendingFilms","getMovieDetails","movieId","getMovieCast","getMovieReviews","getMovies","query","Reviews","useParams","reviews","setReviews","useState","loading","setLoading","isError","setIsError","useEffect","then","_ref","results","catch","error","console","log","finally","_jsxs","_Fragment","children","_jsx","Loader","style","paddingLeft","className","css","reviewsList","map","_ref2","id","author","content","container","PiMaskSad","size"],"sourceRoot":""}